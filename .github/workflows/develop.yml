# Feature -> Development Branch
name: Push feature naar development

on:
  push:
    branches:
      - development

jobs:
  devskim:
    name: DevSkim Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run DevSkim
        uses: microsoft/DevSkim-Action@v1

  html-validate:
    name: HTML Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install html-validate
        run: |
          npm install -g html-validate

      - name: Run html-validate
        run: |
          html-validate "**/*.html" "**/*.htm" > html-validate-report.txt || true
          html-validate "**/*.html" --format sarif > html-validate-results.sarif 

  stylelint:
    name: Stylelint CSS Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Stylelint
        run: npm install stylelint stylelint-config-standard
        # npm init stylelint

      - name: Run Stylelint
        run: npx stylelint "**/*.css" "**/*.scss" "**/*.js" > stylelint-report.txt || true

  eslint:
    name: ESLint JavaScript Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install ESLint
        run: npm install eslint
        # npm init @eslint/config@latest

      - name: Run ESLint
        run: npx eslint "**/*.js" > eslint-report.txt || true

  phpcs:
    name: PHP Code Sniffer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP_CodeSniffer
        run: composer global require "squizlabs/php_codesniffer=*"

      - name: Run PHPCS
        run: ~/.composer/vendor/bin/phpcs --standard=PSR12 . > phpcs-report.txt || true

  logs:
    name: Log Outputs
    runs-on: ubuntu-latest
    needs: [ devskim, html-validate, stylelint, eslint, phpcs ]
    steps:
      - name: Print log from DevSkim
        run: |
          echo "---- DevSkim SARIF Result ----"
          cat devskim-results.sarif || echo "SARIF file not found"
          echo "---- -------------------- ----"

      - name: Print log van Html-validate
        run: |
          echo "---- HTML-validate Report Result ----"
          cat html-validate-report.txt || echo "TXT file not found"
          echo "---- -------------------- ----"

      - name: Print log from Stylelint
        run: |
          echo "---- Stylelint Report Result ----"
          cat stylelint-report.txt || echo "TXT file not found"
          echo "---- -------------------- ----"

      - name: Print log from Eslint
        run: |
          echo "---- Eslint Report Result ----"
          cat eslint-report.txt || echo "TXT file not found"
          echo "---- -------------------- ----"

      - name: Print log from PHPCS
        run: |
          echo "---- PHP Code Sniffer Report Result ----"
          cat phpcs-report.txt || echo "TXT file not found"
          echo "---- -------------------- ----"

  artifacts:
    devskim:
      name: Upload DevSkim SARIF as artifact
      runs-on: ubuntu-latest
      needs: [devskim]
      steps:
        - uses: actions/checkout@v4
        - uses: actions/upload-artifact@v3
          name: devskim-sarif
          path: devskim-results.sarif

    linters:
      name: Upload Linter logs as artifact
      runs-on: ubuntu-latest
      needs: [html-validate, stylelint, eslint, phpcs]
      steps:
        - uses: actions/checkout@v4
        - uses: actions/upload-artifact@v3
          name: linter-reports
          path: |
            html-validate-report.txt
            stylelint-report.txt
            eslint-report.txt
            phpcs-report.txt

  errors:
    name: Foutcontrole op linter logs
    runs-on: ubuntu-latest
    needs: [html-validate, stylelint, eslint, phpcs]
    steps:
      - name: Foutcontrole HTML Validate
        run: |
          if grep -Ei "(Fatal error|Uncaught exception|syntax error)" html-validate-report.txt; then
            echo "❌ Fatale fout gevonden in HTML Validate output"
            exit 1
          fi

      - name: Foutcontrole Stylelint
        run: |
          if grep -Ei "(Fatal error|Uncaught exception|syntax error)" stylelint-report.txt; then
            echo "❌ Fatale fout gevonden in Stylelint output"
            exit 1
          fi

      - name: Foutcontrole ESLint
        run: |
          if grep -Ei "(Fatal error|Uncaught exception|syntax error)" eslint-report.txt; then
            echo "❌ Fatale fout gevonden in ESLint output"
            exit 1
          fi

      - name: Foutcontrole PHP_CodeSniffer
        run: |
          if grep -Ei "(Fatal error|Uncaught exception|syntax error)" phpcs-report.txt; then
            echo "❌ Fatale fout gevonden in PHPCS output"
            exit 1
          fi